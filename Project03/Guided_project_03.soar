visualize image-type jpg
visualize architectural-wmes on

sp {propose*init
   #Make the state, check that is has a type of 'state'
   (state <s> ^type state)
   # Make sure that the superstate is nil. This will prevent this rule from firi
   # ng again on substate
   (<s> ^superstate nil)
   # Make sure agent doesnt exist, so this rule retracts
   (<s> -^agent) 
-->
   #Create a New Operator
   (<s> ^operator <o> + !)
   # Name operator as init
   (<o> ^name init)
}

sp {apply*init
   #match the operator
   (state <s> ^operator <o>)
   #match the name init
   (<o> ^name init)
-->
   # Add an attribute value of agent/account, so the rule retracts
   (<s> ^agent accountant)
   # Create an accounts link/node
   (<s> ^accounts <ac>)
   # Add the accounts, attached to the ndoe created in the previous line
   (<ac> ^account1 <a1>)
   (<ac> ^account2 <a2>)
   (<ac> ^account3 <a3>)
   (<a1> ^value 50)
   (<a2> ^value 500)
   (<a3> ^value 100)
}

# Now Lets write the elaborate rule to discard all accounts with over 400. Remov
#ing working memory element in an elaboration rule can cause issues, so let us j# ust mark the account when it is over 400

sp {elaborate*accounts
   # From the state S, match the accounts attribute to <ac>
   (state <s> ^accounts <ac>)
   # From the <ac> node, Match one of the accounts with the attribute <account> 
   # and matchit to the node <acs>
   (<ac> ^<account> <acs>)
   # From <acs>, match the value attribute to node <val> and verify it greater than 400
   (<acs> ^value <val> > 400)

-->
   # Add an attribute/pair of ignore/ture to the <acs>
   (<acs> ^ignore true )

}

#Let's write the rules to process account. Thie rule will match 2 times, matchin
#g to the two accounts that didn't have an 'ignore' attribute.

sp {propose*process
   #from the state, match the attribute 'accounts' to variable <acs>
   (state <s> ^accounts <acs>)
   #from the variable <acs> match the attribute <account> to varaibe <ac>
   (<acs> ^<account> <ac>)
   #Verify that <acs> doesn't have an 'ignore' attribute
   (<ac> -^ignore)
   #From the account node, match the attribute 'value' to the variable <val>
   (<ac> ^value <val>)

-->
   #Create an operator with a preference pf '+ >'
   (<s> ^operator <o> + >)   
   #Give the operator an attribute/value pair of name/process
   (<o> ^name process)
   #Add an attribute 'account' to the operator, with a value of <account>
   (<o> ^account <account>)
   # Add an attribute 'value' to the operator, with a value of <val>
   (<o> ^value <val>)
}

sp {apply*process
  (state <s> ^operator <o> ^accounts <ac>)
  (<o> ^name process)
  (<o> ^account <account>)
  (<ac> ^<account> <val>)

-->
  #Remive the
  (<ac> ^<account> <val> - ) 
  # Set the value to zero, so the rule retracts
  (<ac> ^<account> 0)
  # Write out the account name
  (write |processing the account | <account>)

}

sp {propose*Substate*breakImpasse
   (state <s> ^impasse tie)
   (<s> ^item <o1>)
   (<s> ^item <o2>)
   (<o1> ^value <val1>)
   (<o2> ^value <val2>)
-->
   (<s> ^operator <o> + =)
   #Give it the name 'breakImpasse'
   (<o> ^name breakImpasse)
   (<o> ^value1 <val1>)
   (<o> ^value2 <val2>)
}

sp {apply*Substate*breakImpasse
   #Match the state, match the operator to <o>
    (state <s> ^operator <o>)
    #Verify that operator has attribute/value pair of name/breakImpasse
    (<o> ^name breakImpasse)
    #Verify that operator has attribute of value1 , map it to <val1>
    (<o> ^value1 <val1>)
    (<o> ^value2 <val2>)
    
    (<s> ^superstate <ss>)
    (<ss> ^operator <o1> +)
    (<o1> ^value <val1>)
    
    (<ss> ^operator <o2> +)
    (<o2> ^value <val2>)

-->
    #From <ss> match the attribute 'operator' to variable <o2>, add the pref that <o2> is greater than <o1>
    (<ss> ^operator <o1> > <o2>)
}









   






























